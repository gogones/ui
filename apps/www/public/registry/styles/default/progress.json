{
  "name": "progress",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-progress"
  ],
  "files": [
    {
      "path": "ui/progress.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Fragment } from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root> & {\n    variant?: \"determinate\" | \"indeterminate\"\n  }\n>(({ variant, className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    {variant === \"determinate\" ? (\n      <ProgressPrimitive.Indicator\n        className=\"h-full bg-success transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    ) : (\n      <Fragment>\n        <ProgressPrimitive.Indicator\n          className={`absolute top-0 left-0 bottom-0 bg-success animate-indeterminate1`}\n        />\n        <ProgressPrimitive.Indicator\n          className={`absolute top-0 left-0 bottom-0 bg-success animate-indeterminate2`}\n        />\n      </Fragment>\n    )}\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "keyframes": {
            "indeterminate1": {
              "0%": {
                "left": "-35%",
                "right": "100%"
              },
              "60%": {
                "left": "100%",
                "right": "-90%"
              },
              "100%": {
                "left": "100%",
                "right": "-90%"
              }
            },
            "indeterminate2": {
              "0%": {
                "left": "-200%",
                "right": "100%"
              },
              "60%": {
                "left": "107%",
                "right": "-8%"
              },
              "100%": {
                "left": "107%",
                "right": "-8%"
              }
            }
          },
          "animation": {
            "indeterminate1": "indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite",
            "indeterminate2": "indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite"
          }
        }
      }
    }
  }
}